#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
)

async function createMinimalTables() {
  console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –≤ Supabase...')
  
  try {
    // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É events
    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã events...')
    const { data: eventData, error: eventError } = await supabase
      .from('events')
      .insert({
        id: '550e8400-e29b-41d4-a716-446655440000',
        title: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ',
        description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è',
        venue: '–¢–µ—Å—Ç–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞',
        event_date: new Date().toISOString(),
        status: 'active'
      })
      .select()
    
    if (eventError && eventError.code !== '23505') { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
      console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ events –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å:', eventError.message)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ events –≥–æ—Ç–æ–≤–∞')
    }

    // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É seats
    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –º–µ—Å—Ç...')
    const testSeats = [
      {
        id: '11111111-1111-1111-1111-111111111111',
        event_id: '550e8400-e29b-41d4-a716-446655440000',
        zone: '201',
        row: '1',
        number: '1',
        status: 'available',
        price: 1000,
        x_coordinate: 100,
        y_coordinate: 100
      },
      {
        id: '22222222-2222-2222-2222-222222222222',
        event_id: '550e8400-e29b-41d4-a716-446655440000',
        zone: '201',
        row: '1',
        number: '2',
        status: 'available',
        price: 1000,
        x_coordinate: 120,
        y_coordinate: 100
      }
    ]

    const { data: seatData, error: seatError } = await supabase
      .from('seats')
      .insert(testSeats)
      .select()
    
    if (seatError && seatError.code !== '23505') { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
      console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ seats –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å:', seatError.message)
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –º–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω—ã')
    }

    console.log('\nüéâ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≥–æ—Ç–æ–≤—ã!')
    console.log('\nüìù –î–ª—è –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:')
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard')
    console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor')
    console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ sql/schema.sql')
console.log('4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ sql/seed.sql')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:')
    console.log('- –¢–∞–±–ª–∏—Ü—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã –≤ Supabase')
    console.log('- –ù—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL —Å–∫—Ä–∏–ø—Ç—ã –≤—Ä—É—á–Ω—É—é')
    console.log('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞')
  }
}

createMinimalTables()