require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Missing Supabase credentials');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function refreshSchemaCache() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ —Å—Ö–µ–º—ã Supabase...');
  
  try {
    // –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ order_general_access
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã order_general_access...');
    const { data, error } = await supabase
      .from('order_general_access')
      .select('*')
      .limit(0);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ order_general_access:', error);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ order_general_access –¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É orders
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã orders...');
    const { data: ordersData, error: ordersError } = await supabase
      .from('orders')
      .select('*')
      .limit(0);
    
    if (ordersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ orders:', ordersError);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ orders –¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–æ–Ω–æ–∫
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç–∞–≤–∫–∏ –≤ order_general_access...');
    const testOrderId = '00000000-0000-0000-0000-000000000000';
    
    const { data: insertData, error: insertError } = await supabase
      .from('order_general_access')
      .insert({
        order_id: testOrderId,
        ticket_name: 'Test Ticket',
        price: 100.00,
        quantity: 1
      })
      .select();
    
    if (insertError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—Å—Ç–∞–≤–∫–µ:', insertError);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞:', insertData);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      await supabase
        .from('order_general_access')
        .delete()
        .eq('order_id', testOrderId);
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

refreshSchemaCache();