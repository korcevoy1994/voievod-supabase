import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.error('NEXT_PUBLIC_SUPABASE_URL:', !!supabaseUrl);
  console.error('SUPABASE_SERVICE_ROLE_KEY:', !!supabaseServiceKey);
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function blockZoneSeats() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –º–µ—Å—Ç –≤ –∑–æ–Ω–∞—Ö 201 –∏ 213...');
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, —Å–∫–æ–ª—å–∫–æ –º–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ —ç—Ç–∏—Ö –∑–æ–Ω–∞—Ö
    const { data: availableSeats, error: checkError } = await supabase
      .from('seats')
      .select('id, zone, row, number, status')
      .in('zone', ['201', '213'])
      .eq('status', 'available');

    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç:', checkError);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${availableSeats?.length || 0} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç –≤ –∑–æ–Ω–∞—Ö 201 –∏ 213`);
    
    if (!availableSeats || availableSeats.length === 0) {
      console.log('‚ÑπÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
      return;
    }

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∑–æ–Ω–∞–º –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const zone201Count = availableSeats.filter(seat => seat.zone === '201').length;
    const zone213Count = availableSeats.filter(seat => seat.zone === '213').length;
    
    console.log(`üìç –ó–æ–Ω–∞ 201: ${zone201Count} –º–µ—Å—Ç`);
    console.log(`üìç –ó–æ–Ω–∞ 213: ${zone213Count} –º–µ—Å—Ç`);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç –≤ –∑–æ–Ω–∞—Ö 201 –∏ 213 –Ω–∞ 'blocked'
    const { data: updatedSeats, error: updateError } = await supabase
      .from('seats')
      .update({ 
        status: 'blocked',
        updated_at: new Date().toISOString()
      })
      .in('zone', ['201', '213'])
      .eq('status', 'available')
      .select('id, zone, row, number, status');

    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –º–µ—Å—Ç:', updateError);
      return;
    }

    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ ${updatedSeats?.length || 0} –º–µ—Å—Ç`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const { data: blockedSeats, error: verifyError } = await supabase
      .from('seats')
      .select('zone, status')
      .in('zone', ['201', '213'])
      .eq('status', 'blocked');

    if (verifyError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', verifyError);
      return;
    }

    const finalZone201Count = blockedSeats?.filter(seat => seat.zone === '201').length || 0;
    const finalZone213Count = blockedSeats?.filter(seat => seat.zone === '213').length || 0;
    
    console.log('\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç:');
    console.log(`üìç –ó–æ–Ω–∞ 201: ${finalZone201Count} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç`);
    console.log(`üìç –ó–æ–Ω–∞ 213: ${finalZone213Count} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç`);
    console.log(`üéØ –í—Å–µ–≥–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: ${finalZone201Count + finalZone213Count} –º–µ—Å—Ç`);
    
  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
blockZoneSeats().then(() => {
  console.log('\nüèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  process.exit(0);
}).catch((error) => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});